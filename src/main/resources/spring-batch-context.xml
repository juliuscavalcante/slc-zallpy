<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <import resource="classpath:context-datasource.xml"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

    <bean id="jobLauncher"   class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">

        <property name="resource" value="classpath:SLC0001-modelo.xml" />

        <property name="fragmentRootElementName" value="Grupo_SLC0001_LiquidProdt" />

        <property name="unmarshaller">
            <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                <property name="classesToBeBound">
                    <list>
                        <value>br.com.zallpy.model.eneity.Register</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="databaseItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[
                    insert into REGISTERS(IDENT_LINHA_BILAT, TP_DEB_CRED, ISP_PBIF_CREDTD, ISP_PBIF_DEBTD, VLR_LANC, CNPJNLIQDANT_DEBTD, NOME_CLI_DEBTD, CNPJNLIQDANT_CREDT, NOME_CLI_CREDTD, TP_TRANSCSLC)
                    values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                ]]>

            </value>
        </property>
        <property name="ItemPreparedStatementSetter">
            <bean class="br.com.zallpy.config.RegisterItemPreparedStatementSetter" />
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

    <batch:job id="registerResult">
        <batch:step id="step1">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk reader="xmlItemReader" writer="databaseItemWriter"
                              commit-interval="10" />
            </batch:tasklet>
        </batch:step>
    </batch:job>
</beans>